.{
    .name = "generator",
    // This is a [Semantic Version](https://semver.org/).
    // In a future version of Zig it will be used for package deduplication.
    .version = "0.0.0",

    // This field is optional.
    // This is currently advisory only; Zig does not yet do anything
    // with this value.
    //.minimum_zig_version = "0.11.0",

    // This field is optional.
    // Each dependency must either provide a `url` and `hash`, or a `path`.
    // `zig build --fetch` can be used to fetch all dependencies of a package, recursively.
    // Once all dependencies are fetched, `zig build` no longer requires
    // internet connectivity.
    .dependencies = .{
        // See `zig fetch --save <url>` for a command-line interface for adding dependencies.
        //.example = .{
        //    // When updating this field to a new URL, be sure to delete the corresponding
        //    // `hash`, otherwise you are communicating that you expect to find the old hash at
        //    // the new URL.
        //    .url = "https://example.com/foo.tar.gz",
        //
        //    // This is computed from the file contents of the directory of files that is
        //    // obtained after fetching `url` and applying the inclusion rules given by
        //    // `paths`.
        //    //
        //    // This field is the source of truth; packages do not come from a `url`; they
        //    // come from a `hash`. `url` is just one of many possible mirrors for how to
        //    // obtain a package matching this `hash`.
        //    //
        //    // Uses the [multihash](https://multiformats.io/multihash/) format.
        //    .hash = "...",
        //
        //    // When this is provided, the package is found in a directory relative to the
        //    // build root. In this case the package's hash is irrelevant and therefore not
        //    // computed. This field and `url` are mutually exclusive.
        //    .path = "foo",
        //},
        .cimgui = .{
            .hash = "1220ccbc4af91e50b9d317e781b0b8e670e5aa9bbc6a6fabbd66c1f8c2511069550d",
            .url = "git+https://gitlab.com/joshua.software.dev/cimgui.git#d7ffff8cf3599bf252ef1022df4d546ffd051866",
        },
        .imgui = .{
            .hash = "1220d0c1a0b86b59ae01e67a493b49ead3d9b42c6cff875f71d772ed9a7b09787adf",
            .url = "git+https://github.com/ocornut/imgui.git#c66a1e7d51951dcb121aee1404a069ac6f8d84d5",
        },
        .lua51 = .{
            .hash = "122059ba40c43edb4ce357513e7c390314ea719e67e135eaebf9cfd4eb5ffc023763",
            .lazy = true,
            .url = "git+https://codeberg.org/joshua-software-dev/lua51_zigbuild.git#756d8774af4d0e588c97503769081c7a0368a67d",
        },
        .python_w2c2zig = .{
            .hash = "1220eb9edfa3fac2d7f09e34eeb5cd482aef8ce11f75b8bfbc85b74f4e1a75781cee",
            .lazy = true,
            .url = "git+https://codeberg.org/joshua-software-dev/python_w2c2zig.git#26df189bfea7b405ac5dd1cfe71017b56bd090eb",
        },
    },

    // Specifies the set of files and directories that are included in this package.
    // Only files and directories listed here are included in the `hash` that
    // is computed for this package.
    // Paths are relative to the build root. Use the empty string (`""`) to refer to
    // the build root itself.
    // A directory listed here means that all files within, recursively, are included.
    .paths = .{
        // This makes *all* files, recursively, included in this package. It is generally
        // better to explicitly list the files and directories instead, to insure that
        // fetching from tarballs, file system paths, and version control all result
        // in the same contents hash.
        "",
        // For example...
        //"build.zig",
        //"build.zig.zon",
        //"src",
        //"LICENSE",
        //"README.md",
    },
}
